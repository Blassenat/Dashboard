export interface User {
  id: number;
  name: string;
  email: string;
  password: string;
  role: 'admin' | 'user';
  isActive: boolean;
  lastLogin: string;
  createdAt: string;
  mfaEnabled: boolean;
}

export interface LoginPoint {
  date: string;
  count: number;
  failedCount?: number;
}

export interface Activity {
  id: number;
  userId: number;
  action: string;
  timestamp: string;
  ipAddress?: string;
  device?: string;
}

export const dashboardMock = {
  stats: {
    activeUsers: 245
  },
  users: [
    {
      id: 1,
      name: 'Admin User',
      email: 'user1@example.com',
      password: 'password1',
      role: 'admin' as const,
      isActive: false,
      lastLogin: new Date().toISOString(),
      createdAt: '2024-01-01T00:00:00.000Z',
      mfaEnabled: true
    },
    {
      id: 2,
      name: 'Regular User',
      email: 'user2@example.com',
      password: 'password2',
      role: 'user' as const,
      isActive: true,
      lastLogin: new Date().toISOString(),
      createdAt: '2024-01-15T00:00:00.000Z',
      mfaEnabled: false
    },

    {
      id: 3,
      name: 'Admin User',
      email: 'user3@example.com',
      password: 'password3',
      role: 'admin' as const,
      isActive: true,
      lastLogin: new Date().toISOString(),
      createdAt: '2024-01-15T00:00:00.000Z',
      mfaEnabled: false
    }
    // ... more users
  ],
  loginTrends: [] as LoginPoint[], // Generated by handlers
  activity: [
    {
      id: 1,
      userId: 1,
      action: 'login',
      timestamp: new Date().toISOString(),
      ipAddress: '192.168.1.1',
      device: 'Chrome on Windows'
    }
    // ... more activity
  ]
};